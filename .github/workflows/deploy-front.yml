name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main]
    paths:
      - "front/**"
      - ".github/workflows/deploy-front.yml"

  workflow_dispatch:

env:
  NODE_VERSION: "latest"
  PNPM_VERSION: "latest"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: front/pnpm-lock.yaml

      - name: Setup Wrangler
        run: npm install -g wrangler

      - name: Ensure Pages project exists
        run: |
          if ! wrangler pages project list 2>/dev/null | grep -q "yanoportfolio-front"; then
            echo "Creating Pages project: yanoportfolio-front"
            wrangler pages project create yanoportfolio-front --production-branch main --compatibility-date $(date +%Y-%m-%d)
          else
            echo "Pages project yanoportfolio-front already exists"
          fi
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy to Cloudflare Pages
        run: make front.deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          NODE_ENV: production
