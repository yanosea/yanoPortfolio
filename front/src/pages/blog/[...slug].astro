---
import { type CollectionEntry, getCollection } from "astro:content";

import BlogComments from "@/components/BlogComments.astro";
import PageLayout from "@/layouts/PageLayout.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import Title from "@/components/Title.astro";

import moment from "moment";

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}

type Props = CollectionEntry<"blog">;

const entry = Astro.props;
const { Content, headings } = await entry.render();
---

<PageLayout
  title=`${entry.data.title} - blog`
  description={entry.data.description}
  article
  imageUrl=`https://yanosea.org${entry.data.images[0].url}`
  blogPage={true}
>
  <article class="max-w-full space-y-6">
    <Title icon={entry.data.title_icon} title={entry.data.title} />
    <a
      href={entry.data.images[0].url}
      data-lightbox={entry.data.images[0].alt}
      data-title={entry.data.images[0].alt}
    >
      <img
        src={entry.data.images[0].url}
        alt={entry.data.images[0].alt}
        class="object-fill mx-auto mt-6"
      />
    </a>
    <p class="text-right text-sub">{entry.data.images[0].alt}</p>
    <div class="prose dark:prose-dark space-y-6">
      {
        headings.length > 0 && (
          <nav class="block lg:hidden">
            <TableOfContents headings={headings} />
          </nav>
        )
      }
      <div class="lg:flex lg:space-x-6">
        <div class="w-full lg:w-3/4">
          <Content />
        </div>
        {
          headings.length > 0 && (
            <nav class="hidden lg:block lg:sticky lg:top-24 lg:self-start lg:max-h-[calc(100vh-3rem)] lg:w-1/4">
              <TableOfContents headings={headings} />
            </nav>
          )
        }
      </div>
    </div>
    <p class="text-sub">
      {moment(entry.data.date).format("YYYY-MM-DD")}
    </p>
    {
      entry.data.tags.map((tag) => (
        <a href={`/blog/tags/${tag}`}>
          <span class="text-sub-darker dark:text-sub-darker-dark hover:text-blue transition-colors">
            #{tag}
          </span>
        </a>
      ))
    }
    <BlogComments />
  </article>
</PageLayout>
