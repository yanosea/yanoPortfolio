---
import IconTextLink from "@/components/IconTextLink.astro";
import PageLayout from "@/layouts/PageLayout.astro";
import Pagination from "@/components/Pagination.astro";
import Title from "@/components/Title.astro";
import {
  getAllEntries,
  getAllEntryTags,
  sortEntriesByDateDesc,
} from "@/libs/blog";

import { Icon } from "astro-icon/components";
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import moment from "moment";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const entries = sortEntriesByDateDesc(await getAllEntries());
  const tags = getAllEntryTags(entries);

  return tags
    .map((tag) =>
      paginate(
        entries.filter((entry) =>
          entry.data.tags.some((current) => current === tag),
        ),
        {
          params: { tag },
          pageSize: 5,
        },
      ),
    )
    .flat();
}

const { tag } = Astro.params;
const { page } = Astro.props as {
  page: Page<CollectionEntry<"blog">>;
};
---

<PageLayout title=`${tag} - blog` description="blog">
  <Title icon="ri:book-2-fill" title="blog" />
  <div class="flex flex-col items-center">
    <span class="flex justify-center items-center mx-auto my-auto">
      {
        (
          <>
            <Icon class="w-6 sm:w-8 h-6 sm:h-8 text-sub" name="mdi:tag" />
            <p class="font-bold text-lg sm:text-2xl text-sub ml-2 sm:ml-4">
              #{tag}
            </p>
          </>
        )
      }
    </span>
  </div>
  {
    page.data.map((entry) => (
      <ul class="space-y-4">
        <li>
          <article class="space-y-1">
            <IconTextLink
              href={`/blog/${entry.slug}`}
              icon={entry.data.title_icon}
              text={entry.data.title}
            />
            <p class="text-sub">
              {moment(entry.data.date).format("YYYY-MM-DD")}
            </p>
            {entry.data.tags.map((tag) => (
              <a href={`/blog/tags/${tag}`} class="text-tag">
                <span class="text-sub-darker dark:text-sub-darker-dark hover:text-blue transition-colors">
                  #{tag}
                </span>
              </a>
            ))}
          </article>
        </li>
      </ul>
    ))
  }
  <Pagination prev={page.url.prev} next={page.url.next} />
</PageLayout>
